## Source: https://github.com/helm/charts/tree/master/stable/prometheus-operator
## https://hub.kubeapps.com/charts/stable/prometheus-operator
commonLabels:
  prometheus: default
global:
  rbac:
    create: true
    enabled: true

prometheusOperator:
  enabled: true
  createCustomResource: false
  configReloaderCpu: 130m
  resources:
    limits:
      cpu: 700m
      memory: 100Mi
    requests:
      cpu: 700m
      memory: 100Mi
  tlsProxy:
    enabled: false
  admissionWebhooks:
    enabled: false

prometheus:
  enabled: true
  ingress:
    enabled: true
    paths: ["/"]
    hosts:
    - prometheus.${domain_name}
    tls:
      - secretName: ${prometheus_tls_secret_name}
        hosts:
          - prometheus.${domain_name}
    annotations:
      kubernetes.io/ingress.class: nginx
      external-dns.alpha.kubernetes.io/hostname: prometheus.${domain_name}
      cert-manager.io/cluster-issuer: letsencrypt
      kubernetes.io/tls-acme: "true"
  prometheusSpec:
    externalUrl: ""
    retentionSize: 15GiB
    retention: 30d
    routePrefix: /
    ruleNamespaceSelector: {}
    serviceMonitorSelector: {}
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 20Gi
    service:
      type: ClusterIP

alertmanager:
  enabled: true
  service: 
    type: ClusterIP
  ingress:
    enabled: true
    paths: ["/"]
    hosts:
      - alertmanager.${domain_name}
    tls:
      - secretName: ${alertmanager_tls_secret_name}
        hosts:
          - alertmanager.${domain_name}
    annotations:
      kubernetes.io/ingress.class: nginx
      external-dns.alpha.kubernetes.io/hostname: alertmanager.${domain_name}
      cert-manager.io/cluster-issuer: letsencrypt
      kubernetes.io/tls-acme: "true"
  alertmanagerSpec:
    externalUrl: ""
    routePrefix: /
    retention: 720h
    retentionSize: 4GiB
    storage:
      volumeClaimTemplate:
        spec:
          accessModes: 
          - ReadWriteOnce
          resources:
            requests:
              storage: 5Gi

grafana:
  enabled: true
  adminUser: admin
  #adminPassword: ""
  defaultDashboardsEnabled: true
  grafana.ini:
    auth.anonymous:
      enabled: true
      org_name: ${org_name}
  persistence:
    enabled: true
    volumeName: grafana
    storageClassName: gp2
    accessModes:
      - ReadWriteOnce
    size: 8Gi
  service:
    type: ClusterIP
    port: 80
    portName: http
    portProtocol: TCP
  ingress:
    enabled: true
    path: "/*"
    hosts:
      - grafana.${domain_name}
    tls:
      - secretName: ${grafana_tls_secret_name}
        hosts:
          - grafana.${domain_name}
    annotations:
      kubernetes.io/ingress.class: nginx
      external-dns.alpha.kubernetes.io/hostname: grafana.${domain_name}
      cert-manager.io/cluster-issuer: letsencrypt
      kubernetes.io/tls-acme: "true"
  sidecar:
    dashboards:
      enabled: true
      datasources:
        defaultDatasourceEnabled: true
        enabled: true
        label: grafana_dashboard
        searchNamespace: ALL
  env:
    GF_AUTH_ANONYMOUS_ENABLED: true
    GF_AUTH_ANONYMOUS_ORG_NAME: Main Org.
    GF_AUTH_ANONYMOUS_ORG_ROLE: Editor

coreDns:
  enabled: true
kubeDns:
  enabled: false